@page
@model AplicatieLicenta.Pages.Users.VizualizarePDFModel
@{
    var litere = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
}

<h2 class="mb-4 fw-bold">Cărți Pdf</h2>

<div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-3">
    <form method="get" class="d-flex align-items-center flex-wrap gap-2">
        <label for="SortBy" class="fw-bold mb-0" style="color: #C8AD7F;">Sort by:</label>
        <select id="SortBy" name="SortBy" onchange="this.form.submit()" class="form-select w-auto">
            <option value="Titlu" selected="@("Titlu" == Model.SortBy)">Titlu</option>
            <option value="Autor" selected="@("Autor" == Model.SortBy)">Autor</option>
            <option value="CategorieVarsta" selected="@("CategorieVarsta" == Model.SortBy)">Categorie vârstă</option>
            <option value="Gen" selected="@("Gen" == Model.SortBy)">Gen</option>
        </select>

        @if (Model.SortBy == "CategorieVarsta")
        {
            <select name="CategorieSelectata" onchange="this.form.submit()" class="form-select w-auto">
                <option value="">Toate categoriile</option>
                @{
                    var categoriiFixe = new List<string> { "Sub 8 ani", "8-10 ani", "10-12 ani", "12-14 ani", "Peste 14 ani" };
                }
                @foreach (var categorie in categoriiFixe)
                {
                    <option value="@categorie" selected="@(categorie == Model.CategorieSelectata)">
                        @categorie
                    </option>
                }
            </select>
        }

        @if (Model.SortBy == "Gen")
        {
            <select name="GenSelectat" onchange="this.form.submit()" class="form-select w-auto">
                <option value="">Toate genurile</option>
                @foreach (var gen in Model.GenuriDisponibile)
                {
                    <option value="@gen" selected="@(gen == Model.GenSelectat)">
                        @gen
                    </option>
                }
            </select>
        }

        @if (!string.IsNullOrEmpty(Model.Litera))
        {
            <input type="hidden" name="Litera" value="@Model.Litera" />
        }

        @* input hidden pentru cautare vocala *@
        @if (!string.IsNullOrEmpty(Model.Autor))
        {
            <input type="hidden" name="Autor" value="@Model.Autor" />
        }
        @if (!string.IsNullOrEmpty(Model.Titlu))
        {
            <input type="hidden" name="Titlu" value="@Model.Titlu" />
        }
    </form>

    <div class="d-flex align-items-center gap-2">
        <button onclick="pornesteVoiceSearch()" class="btn btn-outline-secondary">
             Cauta prin voce
        </button>
        <input type="text" id="searchInput" class="form-control w-auto border border-warning text-center fw-semibold" readonly placeholder="Caută-ți vocal cartea audio preferată..." />
    </div>
</div>

<div class="mb-4">
    <span class="fw-bold me-2">Index:</span>
    @foreach (var lit in litere)
    {
        <a asp-page="./VizualizarePDF" asp-route-Litera="@lit" asp-route-SortBy="@Model.SortBy"
           class="mx-2"
           style="font-weight: bold; color: #C8AD7F; letter-spacing: 2px; text-decoration: none;">
            @lit
        </a>
    }
    <a asp-page="./VizualizarePDF" asp-route-SortBy="@Model.SortBy"
       class="mx-2 text-decoration-underline"
       style="font-weight: bold; color: #C8AD7F;">All</a>
</div>

<hr />
<div class="row">
    @foreach (var carte in Model.Carti)
    {
        <div class="col-md-3 col-sm-6 mb-4">
            <div class="card h-100 text-center shadow-sm">
                <img src="@carte.ImagineCoperta"
                     class="card-img-top"
                     alt="@carte.Titlu"
                     style="height: 350px; width: 100%; object-fit: contain; background-color: #f8f8f8;">
                <div class="card-body">
                    <h5 class="card-title" style="color: #990033;">@carte.Titlu</h5>
                    <p class="card-text text-muted">Autor: <strong>@carte.Autor</strong></p>

                    @if (carte.Genuri?.Any() == true)
                    {
                        <p class="mb-1">
                            <small>Gen: <strong>@string.Join(", ", carte.Genuri.Select(g => g.Denumire))</strong></small>
                        </p>
                    }

                    <a asp-page-handler="Citeste" asp-route-id="@carte.IdCarte" class="btn custom-citeste-btn mt-2">Citește</a>
                    <form method="post" asp-page-handler="AddFavorite" style="margin-top: 0.5rem; text-align: left;">
                        <input type="hidden" name="carteId" value="@carte.IdCarte" />
                        <button type="submit" class="btn btn-sm" style="background: none; border: none; padding: 0;">
                            <span style="color: red;">❤️</span> <span style="color: black; font-weight: bold;">Adauga la favorite</span>
                        </button>
                    </form>



                </div>
            </div>
        </div>
    }
</div>

<style>
    .custom-citeste-btn {
        background-color: #C8AD7F;
        color: white;
        border: none;
        transition: background-color 0.3s ease;
    }

        .custom-citeste-btn:hover {
            background-color: #a98f63;
            color: white;
        }
</style>

<script>
    function pornesteVoiceSearch() {
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        recognition.lang = 'ro-RO';
        recognition.start();

        recognition.onresult = function (event) {
            const text = event.results[0][0].transcript;
            document.getElementById("searchInput").value = text;
            interpreteazaComanda(text);
        };

        recognition.onerror = function (event) {
            console.error("Eroare recunoaștere:", event.error);
        };
    }

    function interpreteazaComanda(text) {
        const comanda = text.toLowerCase();
        const params = new URLSearchParams(window.location.search);

        
        if (comanda.includes("scris de")) {
            const autor = comanda.split("scris de")[1].trim();
            params.set("SortBy", "Autor");
            params.set("Autor", autor);
        }
        else if (comanda.includes("autor")) {
            const autor = comanda.split("autor")[1].trim();
            params.set("SortBy", "Autor");
            params.set("Autor", autor);
        }

        else if (comanda.includes("titlu")) {
            const titlu = comanda.split("titlu")[1].trim();
            params.set("SortBy", "Titlu");
            params.set("Titlu", titlu);
        }
        else if (comanda.includes("pentru") || comanda.includes("vârstă")) {
            const varsta = comanda.match(/\d{1,2}/);
            if (varsta) {
                let categorie = "";
                const v = parseInt(varsta[0]);
                if (v < 8) categorie = "Sub 8 ani";
                else if (v <= 10) categorie = "8-10 ani";
                else if (v <= 12) categorie = "10-12 ani";
                else if (v <= 14) categorie = "12-14 ani";
                else categorie = "Peste 14 ani";

                params.set("SortBy", "CategorieVarsta");
                params.set("CategorieSelectata", categorie);
            }
        }
        else {
            params.set("SortBy", "Titlu");
            params.set("Titlu", comanda.trim());
        }

        window.location.search = params.toString();
    }

</script>
